- name: Enumerate keys
  become: yes
  become_user: "pokt"
  command: "pocket accounts list"
  environment:
        PATH: "{{ path }}"
        GOPATH: "{{ pokt_user_dir }}/go"
  ignore_errors: true
  register: pocket_accounts_list
  
- name: Import keypair
  become: yes
  become_user: "pokt" 
  command: "pocket accounts import-raw --pwd-encrypt {{ account_passphrase }} {{ raw_private_key }}"
  environment:
        PATH: "{{ path }}"
        GOPATH: "{{ pokt_user_dir }}/go"
  when:
    - pocket_accounts_list.stderr is search("no Keys stored in keybase, create a key pair")

- name: Enumerate validator
  become: yes
  become_user: "pokt"
  command: "pocket accounts get-validator"
  environment:
        PATH: "{{ path }}"
        GOPATH: "{{ pokt_user_dir }}/go"
  ignore_errors: true
  register: pocket_get_validator

#- name: Debug validator
#  debug:
#    msg: "{{ pocket_get_validator }}"

- name: Create validator
  become: yes
  become_user: "pokt" 
  command: "pocket accounts set-validator --pwd {{ account_passphrase }} {{ account_address }}"
  environment:
        PATH: "{{ path }}"
        GOPATH: "{{ pokt_user_dir }}/go"
  when:
    - pocket_get_validator.failed is true

- name: Download genesis
  become: yes
  become_user: "pokt" 
  get_url:
    url: "{{ genesis_url }}"
    dest: "{{ pokt_user_dir }}/.pocket/config/genesis.json"
    mode: '0440'
    checksum: "{{ genesis_hash }}"
  notify: restart pocket

- name: Deploy chains.json 
  template:
    src: chains.json.j2
    dest: "{{ pokt_user_dir}}/.pocket/config/chains.json"
    owner: "{{ pokt_user }}"
    group: "{{ pokt_user }}"
    mode: 0640
  notify: restart pocket

- name: Deploy config.json
  template:
    src: config.json.j2
    dest: "{{ pokt_user_dir }}/.pocket/config/config.json"
    owner: "{{ pokt_user }}"
    group: "{{ pokt_user }}"
    mode: "0640"
  notify: restart pocket
  # note that this is always going to change, and trigger a restart b/c the template does NOT have the public IP in it

- name: register public ip
  uri:
    url: 'https://api.ipify.org?format=json'
  register: public_ip
  when: expose_public_ip|bool == true

#- name: Debug public ip
#  debug:
#    msg: "{{ public_ip }}"

- name: Set up external address
  lineinfile:
    path: '{{ pokt_user_dir }}/.pocket/config/config.json'
    regexp: '\"ExternalAddress\":'
    line: "\t    \"ExternalAddress\": \"tcp://{{ public_ip.json.ip }}:{{ custom_port_prefix }}656\","
    state: present
  #when: public_ip.changed    # can't use this conditional because the IP can't be baked into the template
  when: expose_public_ip|bool == true
  notify: restart pocket

- name: Deploy snapshot downloader script
  template:
    src: download_snapshot.sh.j2
    dest: "{{ pokt_user_dir }}/download_snapshot.sh"
    owner: "{{ pokt_user }}"
    group: "{{ pokt_user }}"
    mode: "0750"

- name: Update sudoers to permit {{ pkot_user }} start/stop pocket systemd service
  community.general.sudoers:
    name: allow-pocket-start-stop
    state: present
    user: "{{ pokt_user }}"
    commands: /bin/systemctl stop pocket,/bin/systemctl start pocket

- name: Deploy validator key install script
  template:
    src: install_validator_key.sh.j2
    dest: "{{ pokt_user_dir }}/install_mainnet_key.sh"
    owner: "{{ pokt_user }}"
    group: "{{ pokt_user }}"
    mode: "0750"
  tags: 'validator_install'



